@startuml
'skinparam classAttributeIconSize 0

package AppUtils {
    class AccountingEntry {
        +DateTime datetime
        +string asset_id
        +double asset_units
        +double buying_price
        +double selling_price
        +double benefit
        +AccountingEntry ()
        +AccountingEntry.from_splitted_datetime_string ()
        +AccountingEntry.from_datetime_string ()
        +to_string ()
    }

    class Asset {
        +string name
        +string short_name
        +string type
        +double units
        +double total_value
        +ArrayList<Movement> movements
        +Asset ()
        +to_string ()
    }

    class Movement {
        +double units
        +double unitary_price
        +Movement ()
        +to_string ()
    }

    class Operation {
        +DateTime datetime
        +string source_asset
        +double source_qty
        +string destiny_asset
        +double destiny_qty
        +double normalized_qty
        +Operation ()
        +Operation.from_splitted_datetime_string ()
        +Operation.from_datetime_string ()
        +to_string ()
    }

    class AccountingEntryCorrupted {
        +CODE_01
    }

    class OperationCorrupted {
        +CODE_01
    }
}

package AppWidgets {
    class SettingsMenu <<  (U,orchid) >> extends Gtk.Popover {
        +SettingsMenu ()
    }

    class AccountingTable << (U,orchid) >> extends Gtk.Grid {
        +Gtk.TreeView view
        +AccountingTable ()
        +setup_treeview ()
        #on_changed ()
    }

    class OperationDialog << (U,orchid) >> extends Granite.MessageDialog {
        -Granite.Widgets.DatePicker date_picker
        -Granite.Widgets.TimePicker time_picker
        -Gtk.ComboBox src_asset_combobox
        -Gtk.SpinButton src_qty_spin
        -Gtk.ComboBox SpinButton dst_asset_combobox
        -Gtk.SpinButton dst_qty_spin
        -Gtk.SpinButton real_asset_spin
        +string[] assets
        +OperationDialog ()
        +get_new_operation ()
        -on_comboboxes_changed ()
    }

    class OperationsTable << (U,orchid) >> extends Gtk.Grid {
        -Array<Operation> operations
        +Gtk.Label title_label
        +Gtk.Label label
        +Gtk.TreeView view
        +OperationsTable ()
        +setup_treeview ()
        #on_changed ()
    }

    class AssetDialog << (U,orchid) >> extends Granite.MessageDialog {
        -string[] categories
        -Gtk.Entry name_entry
        -Gtk.Entry short_name_entry
        -Gtk.ComboBox category_combobox
        +AssetDialog ()
        +get_new_asset ()
    }

    class AssetPanel << (U,orchid) >> extends Granite.Widgets.SourceList {
        +AssetPanel ()
    }

    class HeaderBar << (U,orchid) >> extends Gtk.HeaderBar {
        +Gtk.Button new_btn
        +Gtk.Button open_btn
        +Gtk.Button save_btn
        +Gtk.Button add_asset_btn
        +Gtk.Button add_operation_btn
        +Settings settings_menu_btn
        +HeaderBar ()
    }
}

package AppViews {
    class MainView << (U,orchid) >> extends Gtk.Frame {
        +AssetPanel asset_panel
        +NewLogbookView new_book_view
        -OperationsTable operations_table
        -AccountingTable accounting_table
        -buid_ui ()
        -fill_view ()
        +MainView ()
        +update_view ()
    }

    class NewLogbookView << (U,orchid) >> extends Granite.Widgets.Welcome {
        +NewLogbookView ()
    }

    class WelcomeView << (U,orchid) >> extends Granite.Widgets.Welcome {
        +WelcomeView ()
    }
}

package Valoro {
    class Window << (U,orchid) >> extends Gtk.ApplicationWindow {
        -string file_path
        #Gee.HashMap<string, Asset> assets
        #Gee.ArrayList<Operation> operations
        #Gee.ArrayList<AccountingEntry> entries
        -MainView main_view
        -WelcomeView welcome_view
        -Granite.Widgets.Toast toast
        -HeaderBar header_bar
        +Window ()
        -clean_asset_balance ()
        -create_main_view ()
        -on_new_clicked ()
        -on_open_clicked ()
        -on_save_clicked ()
        -on_add_asset_clicked ()
        -on_add_operation_clicked ()
        -on_help_clicked ()
        -show_toast ()
        -update_main_view ()
        -update_accounting_entries ()
    }

    class ValoroApp extends Gtk.Application {
        +ValoroApp ()
        #activate ()
        +{static} main
    }
}

Operation - OperationCorrupted : throws >
AccountingEntry - AccountingEntryCorrupted : throws >
MainView *-- AssetPanel : composes >
MainView *-- OperationsTable : composes >
MainView *-- AccountingTable : composes >
HeaderBar *-- SettingsMenu : uses >
Window "1" *-- "many" Operation : contains >
Window "1" *-- "many" Asset : contains >
Asset "1" *-- "many" Movement : contains >
Window -- AccountingEntry : uses >
Window *- HeaderBar : uses >
Window *- AssetDialog : uses >
Window *- OperationDialog : uses >
Window *- MainView : uses >
Window *- WelcomeView : composes <
MainView *- NewLogbookView : composes <
ValoroApp - Window : uses >

@enduml
